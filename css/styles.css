html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
} 

body {
  background: url(images/logo.png) center center #000;
  padding: 20px;
  font-family: 'Hack', monospace;
  font-size: 12px;
  color: #fff;
  text-align: center;
  margin: 0 auto;
}

a {
  color: #55b7c9;
}

p {
  font-family: 'Hack', monospace;
  font-size: 12px;
  color: #fff;
  line-height: 1.8em;
}

.logo {
  max-width: 600px;
  width: 600px;
  margin: 0 auto;
}

.container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 10px;
}

.content {
  /* hmm */
}

.content p {
  font-family: 'Hack', monospace;
  font-size: 12px;
  color: #fff;
  }

.text {
  position: relative;
  display: inline-block;
}

/* blinking cursor */

.text::after {
  content: "";
  position: absolute;
  top: 0;
  right: -15px;
  /* Remove display: inline-block if not required to be on the same line as text etc */
  display: inline-block;
  background-color: #606060;
  vertical-align: top;
  width: 10px;
  /* Set height to the line height of .text */
  height: 24px;
  /* 
  Animation paramaters:
  blink = animation-name, 
  1s = animation-duration, 
  step-end = animation-timing-function,
  infinite = animation-iteration-count
  */
  -webkit-animation: blink 1s step-end infinite;
  animation: blink 1s step-end infinite;
  }
  
  @-webkit-keyframes blink {
  0% { opacity: 1.0; }
  50% { opacity: 0.0; }
  100% { opacity: 1.0; }
  }
  
  @keyframes blink {
  0% { opacity: 1.0; }
  50% { opacity: 0.0; }
  100% { opacity: 1.0; }
  }